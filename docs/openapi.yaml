openapi: 3.0.0
info:
  title: User API
  version: "1.0.0"

security:
  - bearerAuth: []

paths:
  /login:
    post:
      summary: Login with username or email
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - password
              properties:
                identifier:
                  type: string
                  description: Username or email
                  example: johndoe or john@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  user:
                    type: object
                    description: User data excluding password
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

  /addadmin:
    post:
      summary: Add a new admin
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: newadmin@example.com
      responses:
        '201':
          description: Admin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin created successfully
        '409':
          description: Email already in use
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

  /register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstname
                - lastname
                - email
                - username
                - password
                - confirmPassword
              properties:
                firstname:
                  type: string
                  minLength: 3
                  maxLength: 30
                  example: John
                lastname:
                  type: string
                  minLength: 3
                  maxLength: 30
                  example: Doe
                username:
                  type: string
                  minLength: 3
                  maxLength: 30
                  example: johndoe123
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  minLength: 6
                  format: password
                  example: securePass123
                confirmPassword:
                  type: string
                  minLength: 6
                  format: password
                  example: securePass123
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully registered
        '409':
          description: Email or username already in use
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email or username already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

  /promote/{userId}:
    patch:
      summary: Promote user to investigator
      description: Promotes a user to 'investigator' unless they already have that role. Only accessible by admins.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to promote
          schema:
            type: string
            example: 64f9d5b8d5d2b91f5f317a7e
      responses:
        '200':
          description: User promoted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User promoted to investigator
                  user:
                    type: object
        '400':
          description: User is already an investigator
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User is already an investigator
        '401':
          description: Unauthorized - JWT token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '403':
          description: Forbidden - not an admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Only admins can promote users
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

  /demote/{userId}:
    patch:
      summary: Demote user from investigator to general
      description: Demotes a user to 'general' unless they already have that role. Only accessible by admins.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to demote
          schema:
            type: string
            example: 64f9d5b8d5d2b91f5f317a7e
      responses:
        '200':
          description: User demoted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User demoted to general
                  user:
                    type: object
        '400':
          description: User is already a general user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User is already a general user
        '401':
          description: Unauthorized - JWT token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '403':
          description: Forbidden - not an admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Only admins can demote users
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
